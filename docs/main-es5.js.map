{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/directives/stepper-scroll.directive.ts","webpack:///src/app/directives/textarea-resize.directive.ts","webpack:///src/app/models/sadhana.1.db.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","FREQUENCY","AppComponent","sadhana","sequenceIndex","countDownNumber","countDownLimit","sequences","length","stepper","selectedIndex","stepIndex","Math","round","sequence","tasks","tempo","clearInterval","setInterval","beep","limit","countDownTimer","toggleCountDown","clock","mins","floor","secs","formatTimePart","tempoElementRef","nativeElement","play","value","toggleTempo","previousSequence","nextSequence","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","StepperScroll","changes","appStepperScroll","setTimeout","label","document","querySelector","currentValue","scrollIntoView","block","inline","behavior","TextareaResize","element","style","height","scrollHeight","ASANA","title","description","repetition","imgSrc","PRANAYAMA_PREPARATION","PRANAYAMA","SADHANA","created","Date","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, ElementRef, ViewChild} from '@angular/core';\r\nimport {SADHANA} from './models/sadhana.1.db';\r\nimport {TaskSequence} from './models/task.sequence.model';\r\nimport {MatStepper} from '@angular/material/stepper';\r\n\r\nconst FREQUENCY = 1000;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  @ViewChild('stepper') private stepper: MatStepper;\r\n  @ViewChild('tempoElement', {static: false}) private tempoElementRef: ElementRef;\r\n  sadhana = SADHANA;\r\n  sequenceIndex = 0;\r\n  tempo;\r\n  countDownTimer;\r\n  countDownNumber = 180;\r\n  countDownLimit = 180;\r\n\r\n  private static formatTimePart(value: number): string {\r\n    return (value >= 10 ? '' : '0') + value;\r\n  }\r\n\r\n  get sequence(): TaskSequence {\r\n    return this.sadhana.sequences[this.sequenceIndex];\r\n  }\r\n\r\n  nextSequence() {\r\n    if ((this.sequenceIndex + 1) !== this.sadhana.sequences.length) {\r\n      this.sequenceIndex++;\r\n      this.stepper.selectedIndex = 0;\r\n    }\r\n  }\r\n\r\n  previousSequence() {\r\n    if (this.sequenceIndex !== 0) {\r\n      this.sequenceIndex--;\r\n      this.stepper.selectedIndex = 0;\r\n    }\r\n  }\r\n\r\n  getProgress(stepIndex = 0): number {\r\n    return Math.round((stepIndex + 1) / this.sequence.tasks.length * 100);\r\n  }\r\n\r\n  toggleTempo() {\r\n    if (this.tempo) {\r\n      clearInterval(this.tempo);\r\n      this.tempo = null;\r\n    } else {\r\n      this.tempo = setInterval(() => {\r\n        this.beep();\r\n      }, FREQUENCY);\r\n    }\r\n  }\r\n\r\n  toggleCountDown(limit = 180) {\r\n    this.countDownLimit = limit;\r\n    this.countDownNumber = this.countDownLimit;\r\n    if (this.countDownTimer) {\r\n      clearInterval(this.countDownTimer);\r\n      this.countDownTimer = null;\r\n    } else {\r\n      this.countDownTimer = setInterval(() => {\r\n        this.countDownNumber--;\r\n        if (!this.countDownNumber) {\r\n          this.toggleCountDown();\r\n          this.beep();\r\n        }\r\n      }, FREQUENCY);\r\n    }\r\n  }\r\n\r\n  getFormattedCountDown(limit: number): string {\r\n    const clock = this.countDownTimer ? this.countDownNumber : limit;\r\n    const mins = Math.floor(clock / 60);\r\n    const secs = clock % 60;\r\n    return AppComponent.formatTimePart(mins) + ':' + AppComponent.formatTimePart(secs);\r\n  }\r\n\r\n  private beep() {\r\n    (this.tempoElementRef.nativeElement as HTMLAudioElement).play();\r\n  }\r\n}\r\n","<div class=\"page-content\">\r\n\r\n  <audio #tempoElement src=\"assets/sound/cell-phone-beep.mp3\"></audio>\r\n\r\n  <header>\r\n    <div class=\"main-title\">\r\n      <h3>{{ sequence.title }}</h3>\r\n      <div class=\"step-control\">\r\n        <button mat-mini-fab (click)=\"stepper.previous()\" [disabled]=\"stepper.selectedIndex === 0\" color=\"primary\">\r\n          <mat-icon>navigate_before</mat-icon>\r\n        </button>\r\n        <button mat-mini-fab (click)=\"stepper.next()\" [disabled]=\"stepper.selectedIndex === (sequence.tasks.length - 1)\"\r\n                color=\"primary\">\r\n          <mat-icon>navigate_next</mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <mat-progress-bar mode=\"determinate\" value=\"{{ getProgress(stepper.selectedIndex) }}\"></mat-progress-bar>\r\n  </header>\r\n\r\n  <mat-vertical-stepper #stepper [appStepperScroll]=\"stepper.selectedIndex\">\r\n    <mat-step *ngFor=\"let task of sequence.tasks; index as i;\" [completed]=\"false\">\r\n      <ng-template matStepLabel>{{ task.title }}</ng-template>\r\n      <p class=\"repetition\" *ngIf=\"task.repetition\">{{ task.repetition }}</p>\r\n      <textarea appAutoResize *ngIf=\"task.description\">{{ task.description }}</textarea>\r\n      <div class=\"image-container\"><img *ngIf=\"task.imgSrc\" src=\"assets/img/{{ task.imgSrc }}\"/></div>\r\n    </mat-step>\r\n  </mat-vertical-stepper>\r\n\r\n  <footer>\r\n    <div class=\"step-control\">\r\n      <button mat-raised-button color=\"{{tempo ? 'primary' : 'accent'}}\" (click)=\"toggleTempo()\">Tempo</button>\r\n      <button mat-raised-button color=\"{{countDownTimer ? 'primary' : 'accent'}}\"\r\n              *ngIf=\"!countDownTimer || countDownLimit === 120\" (click)=\"toggleCountDown(120)\">\r\n        {{ getFormattedCountDown(120) }}\r\n      </button>\r\n      <button mat-raised-button color=\"{{countDownTimer ? 'primary' : 'accent'}}\"\r\n              *ngIf=\"!countDownTimer || countDownLimit === 180\" (click)=\"toggleCountDown(180)\">\r\n        {{ getFormattedCountDown(180) }}\r\n      </button>\r\n      <button mat-raised-button color=\"{{countDownTimer ? 'primary' : 'accent'}}\"\r\n              *ngIf=\"!countDownTimer || countDownLimit === 300\" (click)=\"toggleCountDown(300)\">\r\n        {{ getFormattedCountDown(300) }}\r\n      </button>\r\n    </div>\r\n    <div class=\"step-control\">\r\n      <button mat-raised-button (click)=\"previousSequence()\" color=\"primary\">Previous</button>\r\n      <button mat-raised-button (click)=\"nextSequence()\" color=\"primary\">Next</button>\r\n    </div>\r\n  </footer>\r\n\r\n</div>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {TextareaResize} from './directives/textarea-resize.directive';\r\nimport {StepperScroll} from './directives/stepper-scroll.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent, TextareaResize, StepperScroll\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatProgressBarModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatStepperModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Directive, Input, OnChanges, SimpleChanges} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appStepperScroll]'\r\n})\r\nexport class StepperScroll implements OnChanges {\r\n\r\n  @Input() appStepperScroll: string;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.appStepperScroll) {\r\n      setTimeout(() => {\r\n        const label = document.querySelector(`#cdk-step-label-0-${changes.appStepperScroll.currentValue}`);\r\n        if (label) {\r\n          label.scrollIntoView({block: 'start', inline: 'start', behavior: 'smooth'});\r\n        }\r\n      }, 150);\r\n    }\r\n  }\r\n}\r\n","import {Directive, ElementRef} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appAutoResize]'\r\n})\r\nexport class TextareaResize {\r\n  constructor(private element: ElementRef) {\r\n    setTimeout(() => {\r\n      this.element.nativeElement.style.height = (this.element.nativeElement.scrollHeight) + 'px';\r\n    }, 10);\r\n  }\r\n}\r\n","import {Sadhana} from './sadhana.model';\r\nimport {TaskSequence} from './task.sequence.model';\r\n\r\nconst ASANA: TaskSequence = {\r\n  title: 'Ászanák',\r\n  tasks: [\r\n    {\r\n      title: 'Szupta Urdvahasztászana',\r\n      description: `Savászanában érzetfigyelés, majd karemelés, nyújtózás a Szupta Urdvahasztászana helyzetbe.\\n\\nFigyeld a derekad talajra nyomására, lábfejeket húzd pipába és a sarokból nyújtsd a lábakat. Emeld ki a mellkasod, de vidd le a hátadat a talajra. Tenyerek egymás felé néznek. 10 légzésig tartani, közben folyamatosan korrigálni a tartást.`,\r\n      repetition: '10 légzésig',\r\n      imgSrc: 'szupta_urdvahasztaszana.jpg'\r\n    }, {\r\n      title: 'Szupta Pavanamuktászana (fekvő széloldó póz)',\r\n      description: `Fekvő alaphelyzetből hajlítsd a jobb térdet, húzd a combot a mellkashoz kilégzésre. Az ujjakat a lábszáron kulcsold össze. Közelítsd a homlokod a térdedhez. A bal láb maradjon nyújtva. Belégzés miközben a lábat visszaengeded. Végezd el ellentétes lábbal is a gyakorlatot.`,\r\n      repetition: '5-5x',\r\n      imgSrc: 'szupta_pavanamuktaszana.jpg'\r\n    }, {\r\n      title: 'Szupta Udarakarshanászana (fekvő helyzetű hasnyújtás)',\r\n      description: `Alaphelyzet. A térdeket hajlítva helyezd a talpakat a talajra. A gyakorlat alatt a térded és a lábfejed tartsd összezárva. Az ujjakat kulcsold össze a tarkód alatt. Kilégzésre engedd le a térdeket jobbra, közelítsd a talajhoz, egyidejűleg fordítsd a fejed balra. Véghelyzetben tartsd kint a levegőt. A fejed és a lábad vidd középhelyzetre belégzésre. Végezd el ellentétes irányba is a gyakorlatot. `,\r\n      repetition: '5-5x',\r\n      imgSrc: 'szupta_udarakarsanaszana.jpg'\r\n    }, {\r\n      title: 'Naukászana (csónak póz)',\r\n      description: `Alaphelyzet. Belégzésre egyszerre emeld a lábakat, karokat, törzset és a fejet a talajról. A vállak és a lábak legfeljebb 15 cm-re emelkedjenek fel. Tartsd ki a véghelyzetet. Lélegezz ki és egyszerre lazítsd el az egész testet. `,\r\n      repetition: '5x',\r\n      imgSrc: 'naukaszana.jpg'\r\n    }, {\r\n      title: 'Csakki csalanászana (malomkörzés)',\r\n      description: `Kilégzés alatt oldalt félkörben előre, belégzés alatt a másik oldalon visszafelé körzünk. Figyelj a köldöktájék (Manipura) érzeteire. Ez a gyakorlat energiablokk oldó, a manipura csakra blokkját oldja és egyben fokozza a vitalitást.`,\r\n      repetition: '5-5x',\r\n      imgSrc: 'csakki_csalanaszana.jpg'\r\n    }, {\r\n      title: 'Pascsimóttánászana (hátsó nyújtó póz)',\r\n      description: `Próbáld erőltetés mentesen végezni, ha reggel még nehezen megy, akkor használj hevedert, vagy tedd a fejed a székre és talább 20 légzésig maradj benne. Ez elcsendesíti az elmét, csökkenti a tüzet. Figyelj a nyugdot légzésre és vidd a figyelmedet egyre jobban befelé a légzésről egyéb belső érzetekre. `,\r\n      repetition: '20 légzésig',\r\n      imgSrc: 'pascsimottanaszana.jpg'\r\n    }, {\r\n      title: 'Maricsjászana',\r\n      description: `Ülő csavarás, nyújtott lábas ülő helyzetből indulsz, majd egyik lábadat behajlítod és a másik láb térde mellé teszed a lábfejet, megfogod a térdet ellenkező kézzel és kilégzés alatt fordulsz hátra. Figyelj a gerinc nyújtására minden belégzés alatt, majd minden kilégzés alatt kicsit még próbálj csavarodni. Ne erőltesd. `,\r\n      repetition: '10-10 légzésig',\r\n      imgSrc: 'maricsjaszana.jpg'\r\n    }, {\r\n      title: 'Khatu Pranam',\r\n      repetition: '1-1 kör mindkét oldalra',\r\n      imgSrc: 'jme.jpg'\r\n    }, {\r\n      title: 'Adho Mukha Svanászana (kutyapóz)',\r\n      description: `10 légzésig tartani, majd előre lépsz az egyik lábbal és felállsz álló helyzetbe. Vidd a súlypontot a lábak felé, sarkakat nyújtsd a talaj felé, amivel fokozod a lábak nyújtását.`,\r\n      repetition: '10 légzésig',\r\n      imgSrc: 'adho_mukha_svanaszana.jpg'\r\n    }, {\r\n      title: 'Tirjaka Tadászana (hajladozó pálmafa póz)',\r\n      description: `Kilégzés alatt oldalra, majd belégzésre vissza középre, majd kilégzés alatt a másik oldalra és belégzésre vissza.`,\r\n      repetition: '5x',\r\n      imgSrc: 'tirjaka_tadaszana.jpg'\r\n    }, {\r\n      title: 'Utkatászana (széktartás)',\r\n      description: `A lábak teljesen össze vannak zárva, csípőt billentsd, farokcsontot húzd magad alá, majd nyújtsd a hátadat, karokat felfelé. A térdek finom összenyomásával tudod tartani könnyebben a pózt. Sarkadat könyvre teheted.`,\r\n      repetition: '5-10 légzésig',\r\n      imgSrc: 'utkataszana.jpg'\r\n    }, {\r\n      title: 'Trikónászana (háromszög póz)',\r\n      description: `Figyelemösszpontosítás a talp és talaj közötti érintkezésen a hátsó lábnál (külső talpél, sarok). Hátsó lábat falhoz is nyomhatod.`,\r\n      repetition: '2x dinamikusan, majd 10 légzésig mindkét oldalra',\r\n      imgSrc: 'trikonaszana.jpg'\r\n    }, {\r\n      title: 'Virabhadrászana (Hősi póz 2.)',\r\n      description: `Figyelemösszpontosítás a talp és talaj közötti érintkezésen a hátsó lábnál (külső talpél, sarok). Hátsó lábat falhoz is nyomhatod.`,\r\n      repetition: '2x dinamikusan, majd 10 légzésig mindkét oldalra',\r\n      imgSrc: 'virabhadraszana.jpg'\r\n    }, {\r\n      title: 'Bhudzsangászana (kobra póz)',\r\n      description: `Kezek a mellkas mellett. Csak addig emelkedj, hogy az alhas a talajon maradjon.`,\r\n      repetition: '3x dinamikusan, majd 10 légzésig mindkét oldalra',\r\n      imgSrc: 'bhudzsangaszana.jpg'\r\n    }, {\r\n      title: 'Viparíta Karaní Ászana (félgyertya)',\r\n      repetition: '2-5 percig',\r\n      imgSrc: 'viparita_karani_aszana.jpg'\r\n    }, {\r\n      title: 'Savászana, relaxáció',\r\n      repetition: '5 percig',\r\n      imgSrc: 'savaszana.jpg'\r\n    }\r\n  ]\r\n};\r\n\r\nconst PRANAYAMA_PREPARATION: TaskSequence = {\r\n  title: 'Pránajáma előkészítés',\r\n  tasks: [\r\n    {\r\n      title: 'Szúrja namszkár krija',\r\n      description: `1. Zárt állásban, karjaink kinyújtva és tenyereink oldalról a combunkat érintik. Belélegzéssel lőre fordítjuk a tenyereinket, kilégzéssel tenyereink ismét a combunkat érintik. \\n\\n2. Belélegzésünk első felében tenyereinket előre fordítjuk és a második fele alatt ívben Namaszkár mudrába összeillesztjük. Kilégzés első reszében leeresztjük karjainkat, tenyerek előre néznek, második felében ismét érintik a combunkat. \\n\\n3. Belégzésünk első harmadában tenyereinket előre fordítjuk és hasi légzőmozgással lélegzünk be, második harmadában Namaszkár mudra és mellkasi légzés, harmadik harmadnál karokat fejünk fölé emeljük és összeillesztjük a tenyereinket, kulcsonti légzéssel lélegzünk. \\n\\n4. A belégzés azonos az előző gyakorlattal. Kilégzésnél hátrahajlunk és egy harmadát a levegőnek kilélegezzük. A kilégzés második harmadában kitárjuk a karjainkat és a harmadik harmadban leeresztjük a karjainkat a kinduló helyzetbe.`,\r\n      repetition: '4 kör minden fázisból '\r\n    }, {\r\n      title: 'Uddijána bandha',\r\n      description: `Áll egyenesen, terpeszd szét a lábad csípő szélességben. Hajolj előre, helyezd a kezeket a combokra vagy a térdekre. Lélegezz ki teljesen és tartsd kint a levegőt. \\nHúzd szét a mellkasod mintha belélegeznél (vállakat kissé hátra), de ne engedj levegőt beáramolni a légutakba. Húzd össze a hangrést, így a hasad be fog húzódni és azt fogod érezni, hogy a has a felső részét behúzod a bordák felé. \\nTartsd meg a teljes behúzást 5-20 másodpercig a kapacitásod szerint. Azután térj vissza.\\nLazítsd el a hasad, lélegezz be és egyenesedj fel. \\nMindig üres hassal gyakorold. `,\r\n      repetition: '3x'\r\n    }, {\r\n      title: 'Agniszára krija',\r\n      description: `Alaphelyzet mint az Uddijána bandhánál. Anélkül, hogy belélegeznél nyomd ki a hasad, mintha egy léggömböt fújnál fel, tartsd meg 2 másodpercig, majd újra húzd be a hasad, tartsd meg 2 másodpercig. Ismételd ezt 10-15x, majd lélegezz be.`,\r\n      repetition: '10-15 ismétlés 3x'\r\n    }, {\r\n      title: 'Szimha mudra (Szimhászana)',\r\n      description: `Ülj vadzsrászanában (sarokülésben). Emeld fel a ülőcsontokat kissé és keresztezd a lábfejeket bokában, hogy a jobb lábfej a bal fölé kerüljön, mint egy olló. Majd ülj vissza a sarkakra, és a kezeket az azonos térden nyugtasd szétterpesztett ujjakkal.\\nLélegezz be.\\nNyújtsd ki teljesen a nyelvedet szájon át hangosan kilélegezve, a tekinteted a homlokod közepére irányítsd, lapockákat húzd össze, a mellkasod nyisd.\\nMiután teljesen kilélegeztél, húzd vissza a nyelvet, csukd be a szád és lazíts el minden feszültséget a testben, a korokban. `,\r\n      repetition: '3-5x'\r\n    }, {\r\n      title: 'Dzsíhva bandha (nyelvzár)',\r\n      description: `A nyelv hegyét vidd a felső fogsorhoz és szívd fel a nyelv közepét a szájpadláshoz. Eközben a nyakizmok erősen megfeszülnek. \\nCsettintéshez készülve a csettintő hang előtt megállítjuk a nyelvet a nyelvféket teljsen felhúzva. \\nAmikor kezdőként gyakoroljuk, akkor nyugodtan csettinthetünk a nyelvünkkel. `,\r\n      repetition: '5x'\r\n    }, {\r\n      title: 'Brahma mudra',\r\n      description: `Üllj kényelmes meditációs ülésben, kezeidet tedd tenyérrel felfelé a térdekre, vagy combokra. Lazítsd a vállaidat és a karjaidat. Fejed egyenes. Tudatosítsd a légzésedet. Egy percig végezz nyugodt, egyenletes, lassú ki- és belégzést.Csendesítsd el az elméd, vidd a figyelmed befelé.\\nMegtartva a nyugodt, egyenletes, folyamatos légzésed, több légzés alatt fordítsd el balra a fejed, miközben a nyitott szemeddel is erősen balra nézel. Annyira fordítsd a fejed, amennyire csak tudod. Ugyanilyen tempóban és tudatosságban fordítsd vissza a fejed középhelyzetbe (szemek továbbra is balra néznek). \\nUgyanezt ismételd meg jobbra, a szemeidet is jobboldalra irányítva. \\nMajd középhelyzetbe visszatérve nézz az orrod hegyére (naszikagra dristhi) és emeld a fejedet hátra folyamatosan nyújtva tartva a nyakat. \\nMajd a mozgás felső végpontján a szemeidet állítsd át a homlokközéppontra (brúmadja dristhi) és így hajtsd le a fejet folyamatosan nyújtva tartva a nyakat úgy, hogy az állat a mellkasi gödörhöz érjen. \\nEkkor csukd be a szemed, lazítsd el és úgy hozd vissza a kiinduló helyzetbe. `,\r\n      repetition: '3x'\r\n    }, {\r\n      title: 'Kapálabháti krija (hiperventillációs légzés)',\r\n      description: `Üljünk egy kényelmes meditációs ülésben, kéztartás lehet a csin vagy gjána mudra. Hunyjuk be a szemünket és lazítsuk el az egész testet. \\nLélegezzünk be mélyen, tágítva a hasat, majd lélegezzünk ki a hasizmok erőteljes összehúzásával, gyors berántásával. Ekkor gyorsan kiáramlik a levegő. Olyan, mintha egy gyertyát akarnánk elfújni az orrunkon keresztül. \\nNe erőltessük. A következő belégzés úgy történik, hogy passzívan hagyjuk a hasizmokat tágulni. \\nAz utolsó gyors kilégzés után tartsuk kint a levegőt és végezzünk lélegzetvisszatartást. Amikor légszomj keletkezik, lélegezzünk be. \\nFontos, hogy a légzés a hasból történjen, ne a mellkasból. `,\r\n      repetition: '3x'\r\n    }\r\n  ]\r\n};\r\n\r\nconst PRANAYAMA: TaskSequence = {\r\n  title: 'Pránajáma',\r\n  tasks: [\r\n    {\r\n      title: 'Uddzsáji pránajáma',\r\n      description: `...`,\r\n      repetition: '1:2 arányban 20x'\r\n    }, {\r\n      title: 'Brahmarí pránajáma (zümmögő méh lélegzés)',\r\n      description: `Kényelmes belégzés után hosszú jóleső kilégzés, amíg a levegőd tart az \"M\" hangot énelekve egy hangon. Megszoktatja veled a lágy finom kilégzést.`,\r\n      repetition: '20x'\r\n    }\r\n  ]\r\n};\r\n\r\nexport const SADHANA: Sadhana = {\r\n  created: new Date('2021.02.19'),\r\n  sequences: [ASANA, PRANAYAMA_PREPARATION, PRANAYAMA]\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}