{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/directives/stepper-scroll.directive.ts","webpack:///src/app/directives/textarea-resize.directive.ts","webpack:///src/app/models/sadhana.1.db.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","sadhana","sequenceIndex","sequences","length","stepper","selectedIndex","stepIndex","Math","round","sequence","tasks","previousSequence","nextSequence","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","StepperScroll","changes","appStepperScroll","setTimeout","label","document","querySelector","currentValue","scrollIntoView","block","inline","behavior","TextareaResize","element","nativeElement","style","height","scrollHeight","ASANA","title","description","repetition","imgSrc","PRANAYAMA_PREPARATION","PRANAYAMA","SADHANA","created","Date","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild } from '@angular/core';\nimport { SADHANA } from './models/sadhana.1.db';\nimport { TaskSequence } from './models/task.sequence.model';\nimport { MatStepper } from '@angular/material/stepper';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  @ViewChild('stepper') private stepper: MatStepper;\n  sadhana = SADHANA;\n  sequenceIndex = 0;\n\n  get sequence(): TaskSequence {\n    return this.sadhana.sequences[this.sequenceIndex];\n  }\n\n  nextSequence() {\n    if ((this.sequenceIndex + 1) !== this.sadhana.sequences.length) {\n      this.sequenceIndex++;\n      this.stepper.selectedIndex = 0;\n    }\n  }\n\n  previousSequence() {\n    if (this.sequenceIndex !== 0) {\n      this.sequenceIndex--;\n      this.stepper.selectedIndex = 0;\n    }\n  }\n\n  getProgress(stepIndex = 0): number {\n    return  Math.round((stepIndex + 1) / this.sequence.tasks.length * 100); \n  }\n}\n","<div class=\"page-content\">\n\n  <div class=\"menu\">\n    <div class=\"main-title\">\n      <h3>{{ sequence.title }}</h3>\n      <div class=\"step-control\">\n        <button mat-mini-fab (click)=\"stepper.previous()\" [disabled]=\"stepper.selectedIndex === 0\" color=\"primary\">\n          <mat-icon>navigate_before</mat-icon>\n        </button>\n        <button mat-mini-fab (click)=\"stepper.next()\" [disabled]=\"stepper.selectedIndex === (sequence.tasks.length - 1)\" color=\"primary\">\n          <mat-icon>navigate_next</mat-icon>\n        </button>\n        <button mat-mini-fab (click)=\"previousSequence()\" color=\"primary\">\n          <mat-icon>navigate_before</mat-icon>\n        </button>\n        <button mat-mini-fab (click)=\"nextSequence()\" color=\"primary\">\n          <mat-icon>navigate_next</mat-icon>\n        </button>\n      </div>\n    </div>\n\n    <mat-progress-bar mode=\"determinate\" value=\"{{ getProgress(stepper.selectedIndex) }}\" ></mat-progress-bar>\n  </div>\n\n  <mat-vertical-stepper #stepper [appStepperScroll]=\"stepper.selectedIndex\">\n    <mat-step *ngFor=\"let task of sequence.tasks; index as i;\" [completed]=\"false\">\n      <ng-template matStepLabel>{{ task.title }}</ng-template>\n      <p class=\"repetition\" *ngIf=\"task.repetition\">{{ task.repetition }}</p>\n      <textarea appAutoResize *ngIf=\"task.description\">{{ task.description }}</textarea>\n      <div class=\"image-container\"><img *ngIf=\"task.imgSrc\" src=\"/assets/img/{{ task.imgSrc }}\" /></div>\n    </mat-step>\n  </mat-vertical-stepper>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TextareaResize } from './directives/textarea-resize.directive';\nimport { StepperScroll } from './directives/stepper-scroll.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent, TextareaResize, StepperScroll\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatProgressBarModule,\n    MatDividerModule,\n    MatIconModule,\n    MatStepperModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Directive({\n  selector: '[appStepperScroll]'\n})\nexport class StepperScroll implements OnChanges {\n\n  @Input() appStepperScroll: string;\n\n  ngOnChanges(changes: SimpleChanges){\n    if(changes.appStepperScroll){\n      setTimeout(() => {\n        const label = document.querySelector(`#cdk-step-label-0-${changes.appStepperScroll.currentValue}`);\n        if (label) {\n          label.scrollIntoView({ block: 'start', inline: 'start', behavior: 'smooth' });\n        }\n      }, 150);\n    }\n  }\n}\n","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appAutoResize]'\n})\nexport class TextareaResize {\n  constructor(private element: ElementRef) {\n    setTimeout(() => {\n      this.element.nativeElement.style.height = (this.element.nativeElement.scrollHeight) + 'px';\n    }, 10);\n  }\n}","import { Sadhana } from './sadhana.model';\nimport { TaskSequence } from './task.sequence.model';\n\nconst ASANA: TaskSequence = {\n  title: 'Ászanák',\n  tasks: [\n    {\n      title: 'Szupta Urdvahasztászana',\n      description: `Savászanában érzetfigyelés, majd karemelés, nyújtózás a Szupta Urdvahasztászana helyzetbe.\\n\\nFigyeld a derekad talajra nyomására, lábfejeket húzd pipába és a sarokból nyújtsd a lábakat. Emeld ki a mellkasod, de vidd le a hátadat a talajra. Tenyerek egymás felé néznek. 10 légzésig tartani, közben folyamatosan korrigálni a tartást.`,\n      repetition: '10 légzésig',\n      imgSrc: 'szupta_urdvahasztaszana.jpg'\n    },{\n      title: 'Szupta Pavanamuktászana (fekvő széloldó póz)',\n      description: `Fekvő alaphelyzetből hajlítsd a jobb térdet, húzd a combot a mellkashoz kilégzésre. Az ujjakat a lábszáron kulcsold össze. Közelítsd a homlokod a térdedhez. A bal láb maradjon nyújtva. Belégzés miközben a lábat visszaengeded. Végezd el ellentétes lábbal is a gyakorlatot.`,\n      repetition: '5-5x',\n      imgSrc: 'szupta_pavanamuktaszana.jpg'\n    },{\n      title: 'Szupta Udarakarshanászana (fekvő helyzetű hasnyújtás)',\n      description: `Alaphelyzet. A térdeket hajlítva helyezd a talpakat a talajra. A gyakorlat alatt a térded és a lábfejed tartsd összezárva. Az ujjakat kulcsold össze a tarkód alatt. Kilégzésre engedd le a térdeket jobbra, közelítsd a talajhoz, egyidejűleg fordítsd a fejed balra. Véghelyzetben tartsd kint a levegőt. A fejed és a lábad vidd középhelyzetre belégzésre. Végezd el ellentétes irányba is a gyakorlatot. `,\n      repetition: '5-5x',\n      imgSrc: 'szupta_udarakarsanaszana.jpg'\n    },{\n      title: 'Naukászana (csónak póz)',\n      description: `Alaphelyzet. Belégzésre egyszerre emeld a lábakat, karokat, törzset és a fejet a talajról. A vállak és a lábak legfeljebb 15 cm-re emelkedjenek fel. Tartsd ki a véghelyzetet. Lélegezz ki és egyszerre lazítsd el az egész testet. `,\n      repetition: '5x',\n      imgSrc: 'naukaszana.jpg'\n    },{\n      title: 'Csakki csalanászana (malomkörzés)',\n      description: `Kilégzés alatt oldalt félkörben előre, belégzés alatt a másik oldalon visszafelé körzünk. Figyelj a köldöktájék (Manipura) érzeteire. Ez a gyakorlat energiablokk oldó, a manipura csakra blokkját oldja és egyben fokozza a vitalitást.`,\n      repetition: '5-5x',\n      imgSrc: 'csakki_csalanaszana.jpg'\n    },{\n      title: 'Pascsimóttánászana (hátsó nyújtó póz)',\n      description: `Próbáld erőltetés mentesen végezni, ha reggel még nehezen megy, akkor használj hevedert, vagy tedd a fejed a székre és talább 20 légzésig maradj benne. Ez elcsendesíti az elmét, csökkenti a tüzet. Figyelj a nyugdot légzésre és vidd a figyelmedet egyre jobban befelé a légzésről egyéb belső érzetekre. `,\n      repetition: '20 légzésig',\n      imgSrc: 'pascsimottanaszana.jpg'\n    },{\n      title: 'Maricsjászana',\n      description: `Ülő csavarás, nyújtott lábas ülő helyzetből indulsz, majd egyik lábadat behajlítod és a másik láb térde mellé teszed a lábfejet, megfogod a térdet ellenkező kézzel és kilégzés alatt fordulsz hátra. Figyelj a gerinc nyújtására minden belégzés alatt, majd minden kilégzés alatt kicsit még próbálj csavarodni. Ne erőltesd. `,\n      repetition: '10-10 légzésig',\n      imgSrc: 'maricsjaszana.jpg'\n    },{\n      title: 'Khatu Pranam',\n      repetition: '1-1 kör mindkét oldalra',\n      imgSrc: 'jme.jpg'\n    },{\n      title: 'Adho Mukha Svanászana (kutyapóz)',\n      description: `10 légzésig tartani, majd előre lépsz az egyik lábbal és felállsz álló helyzetbe. Vidd a súlypontot a lábak felé, sarkakat nyújtsd a talaj felé, amivel fokozod a lábak nyújtását.`,\n      repetition: '10 légzésig',\n      imgSrc: 'adho_mukha_svanaszana.jpg'\n    },{\n      title: 'Tirjaka Tadászana (hajladozó pálmafa póz)',\n      description: `Kilégzés alatt oldalra, majd belégzésre vissza középre, majd kilégzés alatt a másik oldalra és belégzésre vissza.`,\n      repetition: '5x',\n      imgSrc: 'tirjaka_tadaszana.jpg'\n    },{\n      title: 'Utkatászana (széktartás)',\n      description: `A lábak teljesen össze vannak zárva, csípőt billentsd, farokcsontot húzd magad alá, majd nyújtsd a hátadat, karokat felfelé. A térdek finom összenyomásával tudod tartani könnyebben a pózt. Sarkadat könyvre teheted.`,\n      repetition: '5-10 légzésig',\n      imgSrc: 'utkataszana.jpg'\n    },{\n      title: 'Trikónászana (háromszög póz)',\n      description: `Figyelemösszpontosítás a talp és talaj közötti érintkezésen a hátsó lábnál (külső talpél, sarok). Hátsó lábat falhoz is nyomhatod.`,\n      repetition: '2x dinamikusan, majd 10 légzésig mindkét oldalra',\n      imgSrc: 'trikonaszana.jpg'\n    },{\n      title: 'Virabhadrászana (Hősi póz 2.)',\n      description: `Figyelemösszpontosítás a talp és talaj közötti érintkezésen a hátsó lábnál (külső talpél, sarok). Hátsó lábat falhoz is nyomhatod.`,\n      repetition: '2x dinamikusan, majd 10 légzésig mindkét oldalra',\n      imgSrc: 'virabhadraszana.jpg'\n    },{\n      title: 'Bhudzsangászana (kobra póz)',\n      description: `Kezek a mellkas mellett. Csak addig emelkedj, hogy az alhas a talajon maradjon.`,\n      repetition: '3x dinamikusan, majd 10 légzésig mindkét oldalra',\n      imgSrc: 'bhudzsangaszana.jpg'\n    },{\n      title: 'Viparíta Karaní Ászana (félgyertya)',\n      repetition: '2-5 percig',\n      imgSrc: 'viparita_karani_aszana.jpg'\n    },{\n      title: 'Savászana, relaxáció',\n      repetition: '5 percig',\n      imgSrc: 'savaszana.jpg'\n    }\n  ]\n};\n\nconst PRANAYAMA_PREPARATION: TaskSequence = {\n  title: 'Pránajáma előkészítés',\n  tasks: [\n    {\n      title: 'Szúrja namszkár krija',\n      description: `1. Zárt állásban, karjaink kinyújtva és tenyereink oldalról a combunkat érintik. Belélegzéssel lőre fordítjuk a tenyereinket, kilégzéssel tenyereink ismét a combunkat érintik. \\n\\n2. Belélegzésünk első felében tenyereinket előre fordítjuk és a második fele alatt ívben Namaszkár mudrába összeillesztjük. Kilégzés első reszében leeresztjük karjainkat, tenyerek előre néznek, második felében ismét érintik a combunkat. \\n\\n3. Belégzésünk első harmadában tenyereinket előre fordítjuk és hasi légzőmozgással lélegzünk be, második harmadában Namaszkár mudra és mellkasi légzés, harmadik harmadnál karokat fejünk fölé emeljük és összeillesztjük a tenyereinket, kulcsonti légzéssel lélegzünk. \\n\\n4. A belégzés azonos az előző gyakorlattal. Kilégzésnél hátrahajlunk és egy harmadát a levegőnek kilélegezzük. A kilégzés második harmadában kitárjuk a karjainkat és a harmadik harmadban leeresztjük a karjainkat a kinduló helyzetbe.`,\n      repetition: '4 kör minden fázisból '\n    },{\n      title: 'Uddijána bandha',\n      description: `Áll egyenesen, terpeszd szét a lábad csípő szélességben. Hajolj előre, helyezd a kezeket a combokra vagy a térdekre. Lélegezz ki teljesen és tartsd kint a levegőt. \\nHúzd szét a mellkasod mintha belélegeznél (vállakat kissé hátra), de ne engedj levegőt beáramolni a légutakba. Húzd össze a hangrést, így a hasad be fog húzódni és azt fogod érezni, hogy a has a felső részét behúzod a bordák felé. \\nTartsd meg a teljes behúzást 5-20 másodpercig a kapacitásod szerint. Azután térj vissza.\\nLazítsd el a hasad, lélegezz be és egyenesedj fel. \\nMindig üres hassal gyakorold. `,\n      repetition: '3x'\n    },{\n      title: 'Agniszára krija',\n      description: `Alaphelyzet mint az Uddijána bandhánál. Anélkül, hogy belélegeznél nyomd ki a hasad, mintha egy léggömböt fújnál fel, tartsd meg 2 másodpercig, majd újra húzd be a hasad, tartsd meg 2 másodpercig. Ismételd ezt 10-15x, majd lélegezz be.`,\n      repetition: '10-15 ismétlés 3x'\n    },{\n      title: 'Szimha mudra (Szimhászana)',\n      description: `Ülj vadzsrászanában (sarokülésben). Emeld fel a ülőcsontokat kissé és keresztezd a lábfejeket bokában, hogy a jobb lábfej a bal fölé kerüljön, mint egy olló. Majd ülj vissza a sarkakra, és a kezeket az azonos térden nyugtasd szétterpesztett ujjakkal.\\nLélegezz be.\\nNyújtsd ki teljesen a nyelvedet szájon át hangosan kilélegezve, a tekinteted a homlokod közepére irányítsd, lapockákat húzd össze, a mellkasod nyisd.\\nMiután teljesen kilélegeztél, húzd vissza a nyelvet, csukd be a szád és lazíts el minden feszültséget a testben, a korokban. `,\n      repetition: '3-5x'\n    },{\n      title: 'Dzsíhva bandha (nyelvzár)',\n      description: `A nyelv hegyét vidd a felső fogsorhoz és szívd fel a nyelv közepét a szájpadláshoz. Eközben a nyakizmok erősen megfeszülnek. \\nCsettintéshez készülve a csettintő hang előtt megállítjuk a nyelvet a nyelvféket teljsen felhúzva. \\nAmikor kezdőként gyakoroljuk, akkor nyugodtan csettinthetünk a nyelvünkkel. `,\n      repetition: '5x'\n    },{\n      title: 'Brahma mudra',\n      description: `Üllj kényelmes meditációs ülésben, kezeidet tedd tenyérrel felfelé a térdekre, vagy combokra. Lazítsd a vállaidat és a karjaidat. Fejed egyenes. Tudatosítsd a légzésedet. Egy percig végezz nyugodt, egyenletes, lassú ki- és belégzést.Csendesítsd el az elméd, vidd a figyelmed befelé.\\nMegtartva a nyugodt, egyenletes, folyamatos légzésed, több légzés alatt fordítsd el balra a fejed, miközben a nyitott szemeddel is erősen balra nézel. Annyira fordítsd a fejed, amennyire csak tudod. Ugyanilyen tempóban és tudatosságban fordítsd vissza a fejed középhelyzetbe (szemek továbbra is balra néznek). \\nUgyanezt ismételd meg jobbra, a szemeidet is jobboldalra irányítva. \\nMajd középhelyzetbe visszatérve nézz az orrod hegyére (naszikagra dristhi) és emeld a fejedet hátra folyamatosan nyújtva tartva a nyakat. \\nMajd a mozgás felső végpontján a szemeidet állítsd át a homlokközéppontra (brúmadja dristhi) és így hajtsd le a fejet folyamatosan nyújtva tartva a nyakat úgy, hogy az állat a mellkasi gödörhöz érjen. \\nEkkor csukd be a szemed, lazítsd el és úgy hozd vissza a kiinduló helyzetbe. `,\n      repetition: '3x'\n    },{\n      title: 'Kapálabháti krija (hiperventillációs légzés)',\n      description: `Üljünk egy kényelmes meditációs ülésben, kéztartás lehet a csin vagy gjána mudra. Hunyjuk be a szemünket és lazítsuk el az egész testet. \\nLélegezzünk be mélyen, tágítva a hasat, majd lélegezzünk ki a hasizmok erőteljes összehúzásával, gyors berántásával. Ekkor gyorsan kiáramlik a levegő. Olyan, mintha egy gyertyát akarnánk elfújni az orrunkon keresztül. \\nNe erőltessük. A következő belégzés úgy történik, hogy passzívan hagyjuk a hasizmokat tágulni. \\nAz utolsó gyors kilégzés után tartsuk kint a levegőt és végezzünk lélegzetvisszatartást. Amikor légszomj keletkezik, lélegezzünk be. \\nFontos, hogy a légzés a hasból történjen, ne a mellkasból. `,\n      repetition: '3x'\n    }\n  ]\n};\n\nconst PRANAYAMA: TaskSequence = {\n  title: 'Pránajáma',\n  tasks: [\n    {\n      title: 'Uddzsáji pránajáma',\n      description: `...`,\n      repetition: '1:2 arányban 20x'\n    },{\n      title: 'Brahmarí pránajáma (zümmögő méh lélegzés)',\n      description: `Kényelmes belégzés után hosszú jóleső kilégzés, amíg a levegőd tart az \"M\" hangot énelekve egy hangon. Megszoktatja veled a lágy finom kilégzést.`,\n      repetition: '20x'\n    }\n  ]\n};\n\nexport const SADHANA:Sadhana = {\n  created: new Date('2021.02.19'),\n  sequences: [ASANA, PRANAYAMA_PREPARATION, PRANAYAMA]\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}